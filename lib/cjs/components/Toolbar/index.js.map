{"version":3,"sources":["../../../../src/components/Toolbar/index.tsx"],"names":["Toolbar","handleClick","command","onCommand","props","prefixCls","commands","active","map","item","idx","keyCommand","liProps","activeBtn","value","buttonProps","icon","React","createElement","type","disabled","preview","test","name","onClick","bind","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;IAaqBA,O;;;;;;;;;;;;;;;;UAInBC,W,GAAc,UAACC,OAAD,EAAuB;AAAA,UAC3BC,SAD2B,GACb,MAAKC,KADQ,CAC3BD,SAD2B;AAEnCA,MAAAA,SAAS,IAAIA,SAAS,CAACD,OAAD,CAAtB;AACD,K;;;;;;;6BACQ;AAAA;;AAAA,wBACiC,KAAKE,KADtC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,QADZ,eACYA,QADZ;AAAA,UACsBC,MADtB,eACsBA,MADtB;AAEP,0BACE;AAAK,QAAA,SAAS,YAAKF,SAAL;AAAd,sBACE,yCACGC,QAAQ,CAACE,GAAT,CAAa,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC3B,YAAID,IAAI,CAACE,UAAL,KAAoB,SAAxB,EAAmC;AACjC,8BAAO;AAAI,YAAA,GAAG,EAAED;AAAT,aAAkBD,IAAI,CAACG,OAAvB;AAAgC,YAAA,SAAS,YAAKP,SAAL;AAAzC,aAAP;AACD;;AACD,YAAMQ,SAAS,GAAGN,MAAM,KAAKE,IAAI,CAACK,KAAL,GAAaP,MAAM,CAACE,IAAI,CAACE,UAAN,CAAN,IAA2BJ,MAAM,CAACE,IAAI,CAACE,UAAN,CAAN,KAA4BF,IAAI,CAACK,KAAzE,GAAiFP,MAAM,CAACE,IAAI,CAACE,UAAN,CAA5F,CAAxB;AACA,4BACE;AAAI,UAAA,GAAG,EAAED;AAAT,WAAkBD,IAAI,CAACG,OAAvB;AAAgC,UAAA,SAAS,EAAE,yBAAW;AAAEL,YAAAA,MAAM,EAAEM;AAAV,WAAX;AAA3C,YACG,CAACJ,IAAI,CAACM,WAAN,IAAqBN,IAAI,CAACO,IAD7B,EAEGP,IAAI,CAACM,WAAL,IAAoBE,eAAMC,aAAN,CAAoB,QAApB;AACnBC,UAAAA,IAAI,EAAE,QADa;AAEnBC,UAAAA,QAAQ,EAAEb,MAAM,IAAIA,MAAM,CAACc,OAAjB,IAA4Bd,MAAM,CAACc,OAAP,KAAmB,SAA/C,IAA4D,CAAC,uBAAuBC,IAAvB,CAA4Bb,IAAI,CAACE,UAAjC,CAFpD;AAGnB,uBAAaF,IAAI,CAACc;AAHC,WAGQd,IAAI,CAACM,WAHb;AAInBS,UAAAA,OAAO,EAAE,MAAI,CAACvB,WAAL,CAAiBwB,IAAjB,CAAsB,MAAtB,EAA4BhB,IAA5B;AAJU,YAKlBA,IAAI,CAACO,IALa,CAFvB,CADF;AAWD,OAhBA,CADH,CADF,CADF;AAuBD;;;EAjCkCU,gB;;;AAAhB1B,O,CACL2B,Y,GAA8B;AAC1CrB,EAAAA,QAAQ,EAAE;AADgC,C","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { IProps } from '../../utils';\nimport { ICommand } from '../../commands';\nimport './index.less';\n\nexport interface IToolbarProps extends IProps {\n  onCommand?: (command: ICommand) => void;\n  commands: ICommand[];\n  active?: {\n    [key: string]: any,\n  },\n}\n\nexport default class Toolbar extends Component<IToolbarProps> {\n  public static defaultProps: IToolbarProps = {\n    commands: [],\n  }\n  handleClick = (command: ICommand) => {\n    const { onCommand } = this.props;\n    onCommand && onCommand(command);\n  }\n  render() {\n    const { prefixCls, commands, active } = this.props;\n    return (\n      <div className={`${prefixCls}-toolbar`}>\n        <ul>\n          {commands.map((item, idx) => {\n            if (item.keyCommand === 'divider') {\n              return <li key={idx} {...item.liProps} className={`${prefixCls}-toolbar-divider`} />\n            }\n            const activeBtn = active && (item.value ? active[item.keyCommand] && active[item.keyCommand] === item.value : active[item.keyCommand]); \n            return (\n              <li key={idx} {...item.liProps} className={classnames({ active: activeBtn })}>\n                {!item.buttonProps && item.icon}\n                {item.buttonProps && React.createElement('button', {\n                  type: 'button',\n                  disabled: active && active.preview && active.preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand),\n                  \"data-name\": item.name, ...item.buttonProps,\n                  onClick: this.handleClick.bind(this, item)\n                }, item.icon)}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}"]}